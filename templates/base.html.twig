<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {# Run `composer require symfony/webpack-encore-bundle`
           and uncomment the following Encore helpers to start using Symfony UX #}
        {% block stylesheets %}
            {#{{ encore_entry_link_tags('app') }}#}
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
            <link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet">
        {% endblock %}
    </head>
    <body>
        {% block body %}{% endblock %}
    </body>
    {% block javascripts %}
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>            
        <script type="text/javascript" src="https://cdn.tiny.cloud/1/000e98r5ejnk39y3tkknc2y0b8qh895bn5qv1jrc6a5v3ceu/tinymce/5/tinymce.min.js"></script>
        <script>
            // Initialisation de TinyMCE

            tinymce.init({
                selector: '#gb_message',
                language: 'en',
                plugins: 'image',
                toolbar: 'undo redo | link image',
                /* enable title field in the Image dialog*/
                image_title: true,
                /* enable automatic uploads of images represented by blob or data URIs*/
                automatic_uploads: true,
                valid_elements: '+*[*]',

                images_upload_url: url,

                file_picker_types: 'image',
                /* and here's our custom image picker*/
                file_picker_callback: function (cb, value, meta) {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'file');
                    input.setAttribute('accept', 'image/*');

                    /*
                     Note: In modern browsers input[type="file"] is functional without
                     even adding it to the DOM, but that might not be the case in some older
                     or quirky browsers like IE, so you might want to add it to the DOM
                     just in case, and visually hide it. And do not forget do remove it
                     once you do not need it anymore.
                     */

                    input.onchange = function () {
                        var file = this.files[0];

                        var reader = new FileReader();
                        reader.onload = function () {
                            /*
                             Note: Now we need to register the blob in TinyMCEs image blob
                             registry. In the next release this part hopefully won't be
                             necessary, as we are looking to handle it internally.
                             */
                            var id = 'blobid' + (new Date()).getTime();
                            var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                            var base64 = reader.result.split(',')[1];
                            var blobInfo = blobCache.create(id, file, base64);
                            blobCache.add(blobInfo);

                            /* call the callback and populate the Title field with the file name */
                            cb(blobInfo.blobUri(), {title: file.name});
                        };
                        reader.readAsDataURL(file);
                    };

                    input.click();
                },
                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
            });

        </script>
    {% endblock %}
</html>